{{- $fullName := include "application.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- range $containerIndex, $container := .Values.containers }}
        {{- range $fileIndex, $file := $container.files }}
        checksum/files-{{ $containerIndex }}-{{ $fileIndex }}: {{ $file.content | sha256sum }}
        {{- end }}
        {{- end }}
        ciRef: {{ .Values.ciRef }}
        {{- if .Values.pod.annotations }}
        {{- toYaml .Values.pod.annotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "application.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.pod.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ include "application.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      initContainers:
        # repeats implementation of containers
        {{- range $containerIndex, $container := .Values.initContainers }}
        - name: {{ $container.name }}
          securityContext:
            {{- toYaml $container.securityContext | nindent 12 }}
          image: "{{ $container.image.repository }}:{{ $container.image.tag | default "latest" }}"
          imagePullPolicy: {{ $container.image.pullPolicy }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          env:
            {{- toYaml $container.env | nindent 12 }}
          {{- if $container.envFromSecretNames }}
          envFrom:
          {{- range $container.envFromSecretNames }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          {{- end }}
          ports:
            {{- range $container.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if $container.livenessProbe }}
          livenessProbe:
            {{- toYaml $container.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $container.readinessProbe }}
          readinessProbe:
            {{- toYaml $container.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources: {{- toYaml .resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- range $fileIndex, $file := $container.files }}
            - name: {{ $fullName }}-volume-files-init-containers-{{ $containerIndex }}-{{ $fileIndex }}
              mountPath: {{ $file.path }}
              subPath: {{ regexFind "[^/]+$" $file.path }}
              readOnly: true
            {{- end }}
            {{- range $mountIndex, $mount := $container.volumeMounts }}
            - name: {{ $mount.name }}
              mountPath: {{ $mount.mountPath }}
              readOnly: {{ default false $mount.readOnly }}
            {{- end }}
        {{- end }}
      containers:
        # repeats implementation of initContainers
        {{- range $containerIndex, $container := .Values.containers }}
        - name: {{ $container.name }}
          securityContext:
            {{- toYaml $container.securityContext | nindent 12 }}
          image: "{{ $container.image.repository }}:{{ $container.image.tag | default "latest" }}"
          imagePullPolicy: {{ $container.image.pullPolicy }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          env:
            {{- toYaml $container.env | nindent 12 }}
          {{- if $container.envFromSecretNames }}
          envFrom:
          {{- range $container.envFromSecretNames }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          {{- end }}
          ports:
            {{- range $container.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if $container.livenessProbe }}
          livenessProbe:
            {{- toYaml $container.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $container.readinessProbe }}
          readinessProbe:
            {{- toYaml $container.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources: {{- toYaml .resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- range $fileIndex, $file := $container.files }}
            - name: {{ $fullName }}-volume-files-containers-{{ $containerIndex }}-{{ $fileIndex }}
              mountPath: {{ $file.path }}
              subPath: {{ regexFind "[^/]+$" $file.path }}
              readOnly: true
            {{- end }}
            {{- range $mountIndex, $mount := $container.volumeMounts }}
            - name: {{ $mount.name }}
              mountPath: {{ $mount.mountPath }}
              readOnly: {{ default false $mount.readOnly }}
            {{- end }}
        {{- end }}
      {{- with .Values.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.pod.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.pod.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- range $containerIndex, $container := .Values.initContainers }}
        {{- range $fileIndex, $file := $container.files }}
        - name: {{ $fullName }}-volume-files-init-containers-{{ $containerIndex }}-{{ $fileIndex }}
          configMap:
            name: {{ $fullName }}-configmap-files-init-containers-{{ $containerIndex }}-{{ $fileIndex }}
        {{- end }}
        {{- end }}
        {{- range $containerIndex, $container := .Values.containers }}
        {{- range $fileIndex, $file := $container.files }}
        - name: {{ $fullName }}-volume-files-containers-{{ $containerIndex }}-{{ $fileIndex }}
          configMap:
            name: {{ $fullName }}-configmap-files-containers-{{ $containerIndex }}-{{ $fileIndex }}
        {{- end }}
        {{- end }}
        {{- range $volumeIndex, $volume := .Values.pod.volumes }}
        - name: {{ $volume.name }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-volume-{{ $volume.name }}
        {{- end }}

